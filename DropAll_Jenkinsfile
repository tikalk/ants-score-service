properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')), disableConcurrentBuilds()])

node {
    def workspace = pwd()
    try {
        stage ('Drop All') {
            def $event_uuid = sh "aws lambda list-event-source-mappings --function-name Ants-Smashing-ProcessKinesisHitTrialEvents | jq .EventSourceMappings[0].UUID | sed s/\\\"//g"
            sh "aws lambda delete-event-source-mapping --uuid $event_uuid"

            sh "aws dynamodb delete-table --table-name Ants-Smashing-PlayersScore"
            sh "aws dynamodb delete-table --table-name Ants-Smashing-TeamsScore"
            sh "aws dynamodb delete-table --table-name Ants-Smashing-smashedAnts"
            sh "aws kinesis delete-stream --stream-name Ants-Smashing-HitTrials"
            sh "aws lambda delete-function --function-name Ants-Smashing-GetPlayersScores"
            sh "aws lambda delete-function --function-name Ants-Smashing-PostHitTrial"
            sh "aws lambda delete-function --function-name Ants-Smashing-ProcessKinesisHitTrialEvents"
      	}
    } catch (err) {
        currentBuild.result = 'FAILED'
        throw err
    }

}